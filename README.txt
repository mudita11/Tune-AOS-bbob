# Install cocoex:

# Follow these steps taken from https://numbbo.github.io/coco-doc/ :

cd ..
git clone https://github.com/numbbo/coco.git # get coco using git
cd coco
python3 do.py run-python install-user # install Python experimental module cocoex 
python3 do.py install-postprocessing install-user # install post-processing 


# Install pygmo

pip3 install --user pygmo

# Run:

irace --check


Description on three target runners:
target-runner-target-vs-fe.py is same as target-runner-hv that calculates the area under the curve generated using trace file. The ECDF graph represents log10(FEvals/dim) vs fraction of targets solved for a problem. 

target-runner-error-vs-fe.py calculates the area under the curve generated using trace file. The ECDF graph represents log10(FEvals/dim) vs best fitness seen for different targets for a problem. 

target-runner-best.py receives the best fitness value seen for a problem. 


Details on exdata folder:
This folder has three subfolders in it: rand_1 (DE1), rand_2 (DE2), rand_best_2 (DE3) and current_rand_1 (DE4). Each of these folders have four folders with data generated by bbob and output. 
DE*-T-fe: Contains the data for 24 bbob functions when run on DE with strategy represented by * (* can be 1,2,3,4). It has configuration for DE parameters found by target-runner-target-vs-fe.py.  
DE*-E-fe: Contains the data for 24 bbob functions when run on DE with strategy represented by * (* can be 1,2,3,4). It has configuration for DE parameters found by target-runner-error-vs-fe.py.  
DE*-B: Contains the data for 24 bbob functions when run on DE with strategy represented by * (* can be 1,2,3,4). It has configuration for DE parameters found by target-runner-best.py. 
DE*-D: Contains the data for 24 bbob functions when run on DE with strategy represented by * (* can be 1,2,3,4). It has default configuration (FF=0.5, CR = 0.7 and NP = 300) for DE parameters.   